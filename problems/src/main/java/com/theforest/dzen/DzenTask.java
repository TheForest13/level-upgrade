package com.theforest.dzen;

public class DzenTask {
    /**
     * Заменить в массиве символы пробела на последовательность символов '%', '2', '0' по месту.
     * Гарантируется, что размер массива для этого достаточен.
     * Метод urlify() принимает исходный массив и длину исходной подпоследовательности символов.
     * Возвращает новую длину последовательности.
     * */

// ['1', ' ', '3', ' ', '', '', '', ''] (4) -> ['1', '%', '2', '0', '3', '%', '2', '0'] = 8
// length - не индекс
// заменить входной массив
// возвращать новую последовательность от length
//
// худший вариант n*n
// чуть лучше c доп массивом O(n) память(n)
// оптимальное O(n) память (1)

// ['1', ' ', '3', ' ', '', '', '', '']
//                  *
// ['1', ' ', '3', ' ', '', '', '', '']
//
// ['1', ' ', '3', '', '', '', '', '']
//             *
//
// ['1', ' ', '3', '', '3', '', '', '']
//.       *
//
// ['1', '%', '2', '0', '3', '', '', '']
//   *
//
// [' ', ' ', '', '', '', '']
// [' ', '%', '2', '0', '', '']
// ['%', '2', '0', '0', '', '']

// [' ', ' ', '', '', '', ''] length = 2
// [' ', ' ', '', '', '', '%']

// ['%', '2', '0', '%', '2', '0']

// ['1', ' ', '', '']
// ['1', '%', '2', '0']
// ['1', '%', '1', '0']

   public int urlify(char[] string, int length) {

        int countSpace = 0;
        for (int i = length-1; i >= 0; i--) {
            if (string[i]==' '){
                countSpace++;
            }
        }
        int ans = length + countSpace * 2;

        for (int i = length-1; i >= 0; i--) {
            if (string[i]==' '){
                string[i + countSpace * 2] = '0';
                string[(i - 1) + countSpace * 2] = '2';
                string[(i - 2) + countSpace * 2] = '%';
                countSpace--;
            } else {
                string[i + countSpace * 2] = string[i];
            }
        }

        return ans;
    }
}
